#!/bin/bash

#set script to exit on any errors
set -e

# functions for later use
pause(){
	read -p "$*"
}
lb(){
	printf "\n"
}
banner(){
	curl https://raw.githubusercontent.com/disarmm/MatrixSetup/master/banner
}
dline(){
	echo -e "\e[92m-----------------------------------\e[0m"
}

clear
banner
lb
echo -e "This installer will help you install your Matrix Node to any hard drive partition that has \e[31mat least 150 GB of free space.\e[0m" | fold -s
lb
echo "PLEASE READ EVERY PROMPT CAREFULLY TO AVOID DATA LOSS"
lb
dline
pause 'Press [Enter] key to continue...'
clear
banner
lb

# Fucntion for updating standalone installations
updateStandalone()
{
existingInstall=( $(find / -name gman ! -type d) )
existingInstallPath="Please confirm your current masternode install path:"
lb
PS3="$existingInstallPath "
select gmanPath in "${existingInstall[@]}" "Abort Install" ; do
    if (( REPLY == 1 + ${#existingInstall[@]} )) ; then
	exit
    elif (( REPLY > 0 && REPLY <= ${#existingInstall[@]} )) ; then
	lb
	echo "You have selected to update..."
	echo $gmanPath
	lb
	pause 'If this is correct, press [Enter] to confirm, or Ctrl+C to abort installation'
	lb
	echo "WARNING: This will erase your existing chaindata and replace it with the 1405031 snapshot"
	dline
	echo "This will also stop your node if it is still running"
	sleep 1
	pause '	   Press [Enter] again to confirm or Ctrl+C to abort'
	lb
	kill -9 $(pgrep gman)
	echo "Downloading and install files..."
	sleep 2
	rm $gmanPath/gman $gmanPath/MANGenesis.json $gmanPath/firstRun
	mv $gmanPath/chaindata/keystore $gmanPath/keystore
	rm -rf $gmanPath/chaindata $gmanPath/snapdir
	wget www2.matrixainetwork.eu/snapshots/1405031.tar.gz -O $gmanPath/1405031.tar.gz && tar -zxvf $gmanPath/1405031.tar.gz -C $gmanPath/
        wget https://github.com/MatrixAINetwork/GMAN_CLIENT/raw/master/MAINNET/1022/linux/gman -O $gmanPath/gman && chmod a+x $gmanPath/gman
        wget https://raw.githubusercontent.com/MatrixAINetwork/GMAN_CLIENT/master/MAINNET/1022/MANGenesis.json -O $gmanPath/MANGenesis.json
	mv $gmanPath/keystore $gmanPath/chaindata/keystore
	rm $gmanPath/1405031.tar.gz
	clear
	banner
	lb
	echo "Please enter your wallet B address to create startup script"
	read manWallet
	# Create start script and set an alias so it will run from any path
        echo -e "if [ ! -f "$gmanPath/firstRun" ]; then\n      touch $gmanPath/firstRun && $gmanPath/gman --datadir $gmanPath/chaindata --networkid 1 --debug --verbosity 1 --port 50505 --manAddress $manWallet --entrust $gmanPath/entrust.json --gcmode archive --outputinfo 1 --syncmode full --loadsnapfile "TrieData1405031"\nelse\n    $gmanPath/gman --datadir $gmanPath/chaindata --networkid 1 --debug --verbosity 1 --port 50505 --manAddress $manWallet --entrust $gmanPath/entrust.json --gcmode archive --outputinfo 1 --syncmode full\nfi" > $gmanPath/gmanRunScript.sh
        echo -e "alias gmanMatrix=/$gmanPath/gmanRunScript.sh" >> ~/.bashrc
        source ~/.bashrc
        clear
        curl https://raw.githubusercontent.com/disarmm/MatrixSetup/master/completedBanner
        lb
        echo "Type gmanMatrix to start your new node"
	break
    else
	echo "Invalid option. Please try again."
    fi
done
}
	
newStandalone()
{
newInstall=( $(df -h | grep /dev/ | grep -v "100%" | grep -v "tmpfs" | awk '$4 >= 150 {print}' | awk '$4 !~/M/ {print}' | awk 'length($4) >= 4 {print}' | awk '{print $6}') )
newInstallPath="Select a path to install your new Matrix Node:"
lb
PS3="$newInstallPath "
select matrixPath in "${newInstall[@]}" "Abort Install" ; do
    if (( REPLY == 1 + ${#newInstall[@]} )) ; then
	exit

    elif (( REPLY > 0 && REPLY <= ${#newInstall[@]} )) ; then
        lb
        echo  "You have selected to install to..."
        df -h $matrixPath | sed -n '2 p'
        lb
        pause 'If this is correct, press [Enter] to confirm, or Ctrl+C to abort installation'
	mkdir -p $matrixPath/matrix/
	lb
	echo "Creating SignAccount.json file..."
	lb
	echo "Please enter your wallet B address"
	read manWallet
	lb
	echo "WARNING: YOUR WALLET B PASSWORD SHOULD BE DIFFERENT THAN YOUR WALLET A PASSWORD"
	lb
	echo "If your wallet B and wallet A password are the same, please abort with Ctrl+C and create a new wallet B"
	lb
	echo "Please enter your wallet B password"
	read manPasswd
	echo -e '[\n{\n"Address":"'$manWallet'",\n"Password":"'$manPasswd'"\n}\n]' > $matrixPath/matrix/signAccount.json
	lb
	echo "Downloading and installing files..."
	sleep 2
	wget www2.matrixainetwork.eu/snapshots/1405031.tar.gz -O $matrixPath/matrix/1405031.tar.gz && tar -zxvf $matrixPath/matrix/1405031.tar.gz -C $matrixPath/matrix/
        wget https://github.com/MatrixAINetwork/GMAN_CLIENT/raw/master/MAINNET/1022/linux/gman -O $matrixPath/matrix/gman && chmod a+x /$matrixPath/matrix/gman
        wget https://raw.githubusercontent.com/MatrixAINetwork/GMAN_CLIENT/master/MAINNET/1022/MANGenesis.json -O $matrixPath/matrix/MANGenesis.json
	mkdir $matrixPath/matrix/chaindata/keystore
	rm $matrixPath/matrix/1405031.tar.gz
        clear
        banner
	lb
	echo "Creating entrust.json file..."
	lb
	echo "Note: Please choose a different password than your Wallet B password"
	sleep 1
	lb
	pause '		Press [Return] to continue]'
	$matrixPath/matrix/gman --datadir $matrixPath/matrix/chaindata aes --aesin $matrixPath/matrix/signAccount.json --aesout $matrixPath/matrix/entrust.json
	echo "Open your downloaded UTC wallet file with wordpad or notepad++ and copy/paste the contents below"
	read matrixKeystore
	echo -e "$matrixKeystore" > $matrixPath/matrix/chaindata/keystore/wallet.file
	echo -e "if [ ! -f "$matrixPath/matrix/firstRun" ]; then\n      touch $matrixPath/matrix/firstRun && $matrixPath/matrix/gman --datadir $matrixPath/matrix/chaindata --networkid 1 --debug --verbosity 1 --port 50505 --manAddress $manWallet --entrust /$matrixPath/matrix/entrust.json --gcmode archive --outputinfo 1 --syncmode full --loadsnapfile "TrieData1405031"\nelse\n    $matrixPath/matrix/gman --datadir $matrixPath/matrix/chaindata --networkid 1 --debug --verbosity 1 --port 50505 --manAddress $manWallet --entrust $matrixPath/matrix/entrust.json --gcmode archive --outputinfo 1 --syncmode full\nfi" > $matrixPath/matrix/gmanRunScript.sh
	chmod 775 $matrixPath/matrix/gmanRunScript.sh
	echo -e "alias gmanMatrix=/$matrixPath/gmanRunScript.sh" >> ~/.bashrc
	source ~/.bashrc
	clear
	curl https://raw.githubusercontent.com/disarmm/MatrixSetup/master/completedBanner
	lb
	echo "Type gmanMatrix to start your new node"
	break
    else
        echo "Invalid option. Try again."
    fi
done
}

updateDocker()
{
existingDocker=( $(find / -name gman ! -type d) )
existingDockerPath="Please confirm your current masternode install path:"
lb
PS3="$existingDockerPath "
select gmanPath in "${existingDocker[@]}" "Abort Install" ; do
    if (( REPLY == 1 + ${#existingDocker[@]} )) ; then
        exit
    elif (( REPLY > 0 && REPLY <= ${#existingDocker[@]} )) ; then
        lb
        echo "You have selected to update..."
        echo $gmanPath
        lb
        pause 'If this is correct, press [Enter] to confirm, or Ctrl+C to abort installation'
        lb
        echo "WARNING: This will erase your existing chaindata and replace it with the 1405031 snapshot"
        dline
        echo "This will also stop your node if it is still running"
        sleep 1
        pause '    Press [Enter] again to confirm or Ctrl+C to abort'
        lb
        kill -9 $(pgrep gman)
        echo "Downloading and install files..."
        sleep 2
        rm $gmanPath/gman $gmanPath/MANGenesis.json $gmanPath/firstRun
        mv $gmanPath/chaindata/keystore $gmanPath/keystore
        rm -rf $gmanPath/chaindata $gmanPath/snapdir
        wget www2.matrixainetwork.eu/snapshots/1405031.tar.gz -O $gmanPath/1405031.tar.gz && tar -zxvf $gmanPath/1405031.tar.gz -C $gmanPath/
        wget https://github.com/MatrixAINetwork/GMAN_CLIENT/raw/master/MAINNET/1022/linux/gman -O $gmanPath/gman && chmod a+x $gmanPath/gman
        wget https://raw.githubusercontent.com/MatrixAINetwork/GMAN_CLIENT/master/MAINNET/1022/MANGenesis.json -O $gmanPath/MANGenesis.json
        mv $gmanPath/keystore $gmanPath/chaindata/keystore
        clear
        banner
        lb
        echo "Please enter your wallet B address to create startup script"
        read manWallet
        echo -e "if [ ! -f "$gmanPath/firstRun" ]; then\n      touch $gmanPath/firstRun && $gmanPath/gman --datadir $gmanPath/chaindata --networkid 1 --debug --verbosity 1 --port 50505 --manAddress $manWallet --entrust $gmanPath/entrust.json --gcmode archive --outputinfo 1 --syncmode full --loadsnapfile "TrieData1405031"\nelse\n    $gmanPath/gman --datadir $gmanPath/chaindata --networkid 1 --debug --verbosity 1 --port 50505 --manAddress $manWallet --entrust $gmanPath/entrust.json --gcmode archive --outputinfo 1 --syncmode full\nfi" > $gmanPath/gmanRunScript.sh
        echo -e "alias gmanMatrix=/$gmanPath/gmanRunScript.sh" >> ~/.bashrc
        source ~/.bashrc
        clear
        curl https://raw.githubusercontent.com/disarmm/MatrixSetup/master/completedBanner
        lb
        echo "Type gmanMatrix to start your new node"
        break
    else
        echo "Invalid option. Please try again."
    fi
done
}

newDocker()
{
newDocker=( $(df -h | grep /dev/ | grep -v "100%" | grep -v "tmpfs" | awk '$4 >= 150 {print}' | awk '$4 !~/M/ {print}' | awk 'length($4) >= 4 {print}' | awk '{print $6}') )
newDockerPath="Select a path to install your new Matrix Node:"
lb
PS3="$newDockerPath "
select matrixPath in "${newDocker[@]}" "Abort Install" ; do
    if (( REPLY == 1 + ${#newDocker[@]} )) ; then
        exit

    elif (( REPLY > 0 && REPLY <= ${#newDocker[@]} )) ; then
        lb
        echo  "You have selected to install to..."
        df -h $matrixPath | sed -n '2 p'
        lb
        pause 'If this is correct, press [Enter] to confirm, or Ctrl+C to abort installation'
        mkdir -p $matrixPath/matrix/
        lb
        echo "Creating SignAccount.json file..."
        lb
        echo "Please enter your wallet B address"
        read manWallet
        lb
        echo "WARNING: YOUR WALLET B PASSWORD SHOULD BE DIFFERENT THAN YOUR WALLET A PASSWORD"
        lb
        echo "If your wallet B and wallet A password are the same, please abort with Ctrl+C and create a new wallet B"
        lb
        echo "Please enter your wallet B password"
        read manPasswd
        echo -e '[\n{\n"Address":"'$manWallet'",\n"Password":"'$manPasswd'"\n}\n]' > $matrixPath/matrix/signAccount.json
        lb
        echo "Downloading and installing files..."
        sleep 2
        wget www2.matrixainetwork.eu/snapshots/1405031.tar.gz -O $matrixPath/matrix/1405031.tar.gz && tar -zxvf $matrixPath/matrix/1405031.tar.gz -C $matrixPath/matrix/
        wget https://github.com/MatrixAINetwork/GMAN_CLIENT/raw/master/MAINNET/1022/linux/gman -O $matrixPath/matrix/gman && chmod a+x /$matrixPath/matrix/gman
        wget https://raw.githubusercontent.com/MatrixAINetwork/GMAN_CLIENT/master/MAINNET/1022/MANGenesis.json -O $matrixPath/matrix/MANGenesis.json
        mkdir $matrixPath/matrix/chaindata/keystore
        clear
        banner
        lb
        echo "Creating entrust.json file..."
        lb
        echo "Note: Please choose a different password than your Wallet B password"
        sleep 1
        lb
        pause '         Press [Return] to continue]'
        $matrixPath/matrix/gman --datadir $matrixPath/matrix/chaindata aes --aesin $matrixPath/matrix/signAccount.json --aesout $matrixPath/matrix/entrust.json
        echo "Open your downloaded UTC wallet file with wordpad or notepad++ and copy/paste the contents below"
        read matrixKeystore
        echo -e "$matrixKeystore" > $matrixPath/matrix/chaindata/keystore/wallet.file
        echo -e "if [ ! -f "$matrixPath/matrix/firstRun" ]; then\n      touch $matrixPath/matrix/firstRun && $matrixPath/matrix/gman --datadir $matrixPath/matrix/chaindata --networkid 1 --debug --verbosity 1 --port 50505 --manAddress $manWallet --entrust /$matrixPath/matrix/entrust.json --gcmode archive --outputinfo 1 --syncmode full --loadsnapfile "TrieData1405031"\nelse\n    $matrixPath/matrix/gman --datadir $matrixPath/matrix/chaindata --networkid 1 --debug --verbosity 1 --port 50505 --manAddress $manWallet --entrust $matrixPath/matrix/entrust.json --gcmode archive --outputinfo 1 --syncmode full\nfi" > $matrixPath/matrix/gmanRunScript.sh
        echo -e "alias gmanMatrix=/$matrixPath/gmanRunScript.sh" >> ~/.bashrc
        source ~/.bashrc
        clear
        curl https://raw.githubusercontent.com/disarmm/MatrixSetup/master/completedBanner
        lb
        echo "Type gmanMatrix to start your new node"
        break
    else
        echo "Invalid option. Try again."
    fi
done
}

standaloneUpdatePrompt()
{
	lb
                PS3="$upgradePrompt "
                select ug in "New Install" "Update Existing"; do
                        case $ug in
				"New Install") newStandalone; exit;;
                                "Update Existing") updateStandalone; exit;;
                        esac
                done
}

DockerUpdatePrompt()
{
        lb
                PS3="$upgradePrompt "
                select ug in "New install" "Update Existing"; do
                        case $ug in
                                "New Install") newDockere; exit;;
                                "Update Existing") updateDocker; exit;;
                        esac
                done
}

installType="Is this a single node(Standalone) or will you be using docker for multiple nodes?"
upgradePrompt="Are you updating your existing node or deploying a new node?"
PS3="$installType "
select t in "Standalone" "Docker"; do
    case $t in
        Standalone ) standaloneUpdatePrompt; exit;;
        Docker ) dockerUpdatePrompt; exit;;
    esac
done


